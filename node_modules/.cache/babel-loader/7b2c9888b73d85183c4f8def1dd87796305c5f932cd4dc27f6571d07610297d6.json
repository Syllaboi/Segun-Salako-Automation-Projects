{"ast":null,"code":"var _jsxFileName = \"/workspace/src/components/VoiceRecorder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Mic, MicOff, Send } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceRecorder = ({\n  onTranscription,\n  isProcessing\n}) => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [audioChunks, setAudioChunks] = useState([]);\n  const [isListening, setIsListening] = useState(false);\n  const recognitionRef = useRef(null);\n  useEffect(() => {\n    // Initialize Speech Recognition if available\n    if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {\n      const SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;\n      recognitionRef.current = new SpeechRecognition();\n      recognitionRef.current.continuous = true;\n      recognitionRef.current.interimResults = true;\n      recognitionRef.current.lang = 'en-US';\n      recognitionRef.current.onresult = event => {\n        const transcript = Array.from(event.results).map(result => result[0]).map(result => result.transcript).join('');\n        if (event.results[event.results.length - 1].isFinal) {\n          onTranscription(transcript);\n          setIsListening(false);\n        }\n      };\n      recognitionRef.current.onerror = event => {\n        console.error('Speech recognition error:', event.error);\n        setIsListening(false);\n      };\n      recognitionRef.current.onend = () => {\n        setIsListening(false);\n      };\n    }\n    return () => {\n      if (recognitionRef.current) {\n        recognitionRef.current.stop();\n      }\n    };\n  }, [onTranscription]);\n  const startRecording = async () => {\n    try {\n      // Start speech recognition if available\n      if (recognitionRef.current && !isListening) {\n        recognitionRef.current.start();\n        setIsListening(true);\n        return;\n      }\n\n      // Fallback to media recorder for audio recording\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const recorder = new MediaRecorder(stream);\n      recorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          setAudioChunks(prev => [...prev, event.data]);\n        }\n      };\n      recorder.onstop = () => {\n        const audioBlob = new Blob(audioChunks, {\n          type: 'audio/wav'\n        });\n        // Here you would typically send the audio to a transcription service\n        // For now, we'll just show a placeholder message\n        onTranscription(\"Audio recorded - transcription would happen here\");\n        setAudioChunks([]);\n      };\n      recorder.start();\n      setMediaRecorder(recorder);\n      setIsRecording(true);\n    } catch (error) {\n      console.error('Error starting recording:', error);\n    }\n  };\n  const stopRecording = () => {\n    if (recognitionRef.current && isListening) {\n      recognitionRef.current.stop();\n      setIsListening(false);\n      return;\n    }\n    if (mediaRecorder && isRecording) {\n      mediaRecorder.stop();\n      mediaRecorder.stream.getTracks().forEach(track => track.stop());\n      setIsRecording(false);\n      setMediaRecorder(null);\n    }\n  };\n  const toggleRecording = () => {\n    if (isRecording || isListening) {\n      stopRecording();\n    } else {\n      startRecording();\n    }\n  };\n  const isActive = isRecording || isListening;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleRecording,\n      disabled: isProcessing,\n      className: `\n          mic-button w-16 h-16 rounded-full flex items-center justify-center\n          transition-all duration-300 ease-out\n          ${isActive ? 'bg-red-500 animate-recording neon-glow' : 'bg-blue-neon hover:bg-blue-dark neon-glow'}\n          ${isProcessing ? 'opacity-50 cursor-not-allowed' : 'hover:scale-110'}\n          focus:outline-none focus:ring-4 focus:ring-blue-neon focus:ring-opacity-30\n        `,\n      children: isActive ? /*#__PURE__*/_jsxDEV(MicOff, {\n        className: \"w-6 h-6 text-white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Mic, {\n        className: \"w-6 h-6 text-dark-primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), isActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ml-4 text-sm text-dark-muted animate-pulse\",\n      children: isListening ? 'Listening...' : 'Recording...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceRecorder, \"DfywwS4BZVFE6T01lR0KwV72GaQ=\");\n_c = VoiceRecorder;\nexport default VoiceRecorder;\nvar _c;\n$RefreshReg$(_c, \"VoiceRecorder\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Mic","MicOff","Send","jsxDEV","_jsxDEV","VoiceRecorder","onTranscription","isProcessing","_s","isRecording","setIsRecording","mediaRecorder","setMediaRecorder","audioChunks","setAudioChunks","isListening","setIsListening","recognitionRef","window","SpeechRecognition","webkitSpeechRecognition","current","continuous","interimResults","lang","onresult","event","transcript","Array","from","results","map","result","join","length","isFinal","onerror","console","error","onend","stop","startRecording","start","stream","navigator","mediaDevices","getUserMedia","audio","recorder","MediaRecorder","ondataavailable","data","size","prev","onstop","audioBlob","Blob","type","stopRecording","getTracks","forEach","track","toggleRecording","isActive","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspace/src/components/VoiceRecorder.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Mic, MicOff, Send } from 'lucide-react';\n\nconst VoiceRecorder = ({ onTranscription, isProcessing }) => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [audioChunks, setAudioChunks] = useState([]);\n  const [isListening, setIsListening] = useState(false);\n  const recognitionRef = useRef(null);\n\n  useEffect(() => {\n    // Initialize Speech Recognition if available\n    if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {\n      const SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;\n      recognitionRef.current = new SpeechRecognition();\n      recognitionRef.current.continuous = true;\n      recognitionRef.current.interimResults = true;\n      recognitionRef.current.lang = 'en-US';\n\n      recognitionRef.current.onresult = (event) => {\n        const transcript = Array.from(event.results)\n          .map(result => result[0])\n          .map(result => result.transcript)\n          .join('');\n\n        if (event.results[event.results.length - 1].isFinal) {\n          onTranscription(transcript);\n          setIsListening(false);\n        }\n      };\n\n      recognitionRef.current.onerror = (event) => {\n        console.error('Speech recognition error:', event.error);\n        setIsListening(false);\n      };\n\n      recognitionRef.current.onend = () => {\n        setIsListening(false);\n      };\n    }\n\n    return () => {\n      if (recognitionRef.current) {\n        recognitionRef.current.stop();\n      }\n    };\n  }, [onTranscription]);\n\n  const startRecording = async () => {\n    try {\n      // Start speech recognition if available\n      if (recognitionRef.current && !isListening) {\n        recognitionRef.current.start();\n        setIsListening(true);\n        return;\n      }\n\n      // Fallback to media recorder for audio recording\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      const recorder = new MediaRecorder(stream);\n      \n      recorder.ondataavailable = (event) => {\n        if (event.data.size > 0) {\n          setAudioChunks(prev => [...prev, event.data]);\n        }\n      };\n\n      recorder.onstop = () => {\n        const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });\n        // Here you would typically send the audio to a transcription service\n        // For now, we'll just show a placeholder message\n        onTranscription(\"Audio recorded - transcription would happen here\");\n        setAudioChunks([]);\n      };\n\n      recorder.start();\n      setMediaRecorder(recorder);\n      setIsRecording(true);\n    } catch (error) {\n      console.error('Error starting recording:', error);\n    }\n  };\n\n  const stopRecording = () => {\n    if (recognitionRef.current && isListening) {\n      recognitionRef.current.stop();\n      setIsListening(false);\n      return;\n    }\n\n    if (mediaRecorder && isRecording) {\n      mediaRecorder.stop();\n      mediaRecorder.stream.getTracks().forEach(track => track.stop());\n      setIsRecording(false);\n      setMediaRecorder(null);\n    }\n  };\n\n  const toggleRecording = () => {\n    if (isRecording || isListening) {\n      stopRecording();\n    } else {\n      startRecording();\n    }\n  };\n\n  const isActive = isRecording || isListening;\n\n  return (\n    <div className=\"flex items-center justify-center p-4\">\n      <button\n        onClick={toggleRecording}\n        disabled={isProcessing}\n        className={`\n          mic-button w-16 h-16 rounded-full flex items-center justify-center\n          transition-all duration-300 ease-out\n          ${isActive \n            ? 'bg-red-500 animate-recording neon-glow' \n            : 'bg-blue-neon hover:bg-blue-dark neon-glow'\n          }\n          ${isProcessing ? 'opacity-50 cursor-not-allowed' : 'hover:scale-110'}\n          focus:outline-none focus:ring-4 focus:ring-blue-neon focus:ring-opacity-30\n        `}\n      >\n        {isActive ? (\n          <MicOff className=\"w-6 h-6 text-white\" />\n        ) : (\n          <Mic className=\"w-6 h-6 text-dark-primary\" />\n        )}\n      </button>\n      \n      {isActive && (\n        <div className=\"ml-4 text-sm text-dark-muted animate-pulse\">\n          {isListening ? 'Listening...' : 'Recording...'}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default VoiceRecorder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}